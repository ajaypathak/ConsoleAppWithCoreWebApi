using Newtonsoft.Json;
using System;

namespace Api.ClientProxy
{
    //----------------------
    // <auto-generated>
    //     Generated using the NSwag toolchain v12.0.13.0 (NJsonSchema v9.13.17.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
    // </auto-generated>
    //----------------------

    namespace MyNamespace
    {
#pragma warning disable

        [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.13.0 (NJsonSchema v9.13.17.0 (Newtonsoft.Json v11.0.0.0))")]
        public partial interface IDefaultClient
        {
            /// <exception cref="SwaggerException">A server side error occurred.</exception>
            System.Threading.Tasks.Task<UserResponse> GetUserDetailsAsync();

            /// <exception cref="SwaggerException">A server side error occurred.</exception>
            /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            System.Threading.Tasks.Task<UserResponse> GetUserDetailsAsync(System.Threading.CancellationToken cancellationToken);

            /// <exception cref="SwaggerException">A server side error occurred.</exception>
            System.Threading.Tasks.Task<object> UpdateUserDetailsAsync();

            /// <exception cref="SwaggerException">A server side error occurred.</exception>
            /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            System.Threading.Tasks.Task<object> UpdateUserDetailsAsync(System.Threading.CancellationToken cancellationToken);

        }

#pragma warning restore
    }
}
